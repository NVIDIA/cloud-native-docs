[repo]
logging = "warn"

[repo_docs]
enabled = true
# keep_sphinx_conf_py = true
social_media_set = []
social_media = []
favicon = "${root}/assets/favicon.ico"
logo = "${root}/assets/nvidia-logo-white.png"
author = "NVIDIA Corporation"

sphinx_conf_py_extra = """
  myst_enable_extensions = [
    "colon_fence", "dollarmath",
  ]
  templates_path = ['${root}/templates']
  extensions.extend([
    "sphinx.ext.autosectionlabel",
    "sphinx_copybutton",
  ])
  suppress_warnings = [ 'autosectionlabel.*' ]
  pygments_style = 'sphinx'
  copybutton_exclude = '.linenos, .gp'
  html_theme_options = {
    'titles_only': True,
    'logo_only': True,
    'analytics_id': "G-WBRZJBCJEW",
  }
  html_domain_indices = False
  html_use_index = False
  html_extra_path = ["versions.json"]
  html_static_path.append("${root}/css/")
  html_css_files.append("custom.css")
  highlight_language = 'console'
  intersphinx_mapping = {
    "dcgm": ("https://docs.nvidia.com/datacenter/dcgm/latest/", "../work/dcgm-offline.inv"),
    "gpuop": ("https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/latest/",
                ("_build/docs/gpu-operator/latest/objects.inv", None)),
    "ctk": ("https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/",
                ("_build/docs/container-toolkit/latest/objects.inv", None)),
    "drv": ("https://docs.nvidia.com/datacenter/cloud-native/driver-containers/latest/",
                ("_build/docs/driver-containers/latest/objects.inv", None)),
    "ocp": ("https://docs.nvidia.com/datacenter/cloud-native/openshift/latest/",
                ("_build/docs/openshift/latest/objects.inv", None)),
    "edge": ("https://docs.nvidia.com/datacenter/cloud-native/edge/latest/",
                ("_build/docs/edge/latest/objects.inv", None)),
  }
  rst_epilog = ".. |gitlab_mr_url| replace:: Sorry Charlie...not a merge request."
  if os.environ.get("CI_MERGE_REQUEST_IID") is not None:
    rst_epilog = ".. |gitlab_mr_url| replace:: {}/-/merge_requests/{}".format(
      os.environ["CI_MERGE_REQUEST_PROJECT_URL"], os.environ["CI_MERGE_REQUEST_IID"])
"""

project_build_order = [
  "driver-containers",
  "gpu-telemetry",
  "openshift",
  "gpu-operator",
  "edge",
  "kubernetes",
  "partner-validated",
  "container-toolkit",
  "secure-services-istio-keycloak",
  "review",
]

# deps = [
#  ["ctk", "_build/docs/container-toolkit/latest"],
#  ["drv", "_build/docs/driver-containers/latest"],
#  ["gpuop", "_build/docs/gpu-operator/latest"],
#  ["ocp", "_build/docs/openshift/latest"],
#  ["edge", "_build/docs/edge/latest"],
# ]


[repo_docs.projects.container-toolkit]
docs_root = "${root}/container-toolkit"
project = "container-toolkit"
name = "NVIDIA Container Toolkit"
version = "1.17.4"
copyright_start = 2020
redirects = [
  { path="concepts.html", target="index.html" },
  { path="distro/amazon-linux.html", target="install-guide.html" },
  { path="distro/centos8.html", target="install-guide.html" },
  { path="distro/rhel7.html", target="install-guide.html" },
  { path="distro/suse15.html", target="install-guide.html" },
  { path="distro/ubuntu.html", target="install-guide.html" },
  { path="install/nvidia-container-toolkit.html", target="install-guide.html" },
  { path="install/repo-apt.html", target="install-guide.html" },
  { path="install/repo-yum.html", target="install-guide.html" },
  { path="install/repo-zypper.html", target="install-guide.html" },
  { path="nvidia-containerd.html", target="install-guide.html" },
  { path="nvidia-docker.html", target="install-guide.html" },
  { path="nvidia-podman.html", target="install-guide.html" },
  { path="overview.html", target="index.html" },
  { path="runtime/docker.html", target="docker-specialized.html" },
  { path="user-guide.html", target="install-guide.html" },
]

[repo_docs.projects.container-toolkit.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.driver-containers]
docs_root = "${root}/driver-containers"
root_doc = "redirected"
project = "driver-containers"
name = "NVIDIA Driver Containers"
version = "1.0.0"
copyright_start = 2020
extra_content_head = [
  """
  <meta name="robots" content="noindex"/>
  """
]
redirects = [
  { path="index.html", project="gpu-operator", target="index.html" },
  { path="overview.html", project="gpu-operator", target="index.html" },
]

[repo_docs.projects.driver-containers.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.edge]
docs_root = "${root}/edge"
project = "edge"
name = "NVIDIA Cloud Native Reference Architectures"
version = "1.0.0"
copyright_start = 2020

[repo_docs.projects.edge.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.gpu-operator]
docs_root = "${root}/gpu-operator"
project = "gpu-operator"
name = "NVIDIA GPU Operator"
version = "24.9.2"
source_substitutions = { version = "v24.9.2", recommended = "570.86.15" }
copyright_start = 2020
sphinx_exclude_patterns = [
  "life-cycle-policy.rst",
]
redirects = [
  { path="openshift/introduction.html", project="openshift", target="introduction.html" },
  { path="openshift/time-slicing-gpus-in-openshift.html", project="openshift", target="time-slicing-gpus-in-openshift.html" },
  { path="openshift/enable-gpu-monitoring-dashboard.html", project="openshift", target="enable-gpu-monitoring-dashboard.html" },
  { path="openshift/nvaie-with-ocp.html", project="openshift", target="nvaie-with-ocp.html" },
  { path="openshift/install-nfd.html", project="openshift", target="install-nfd.html" },
  { path="openshift/steps-overview.html", project="openshift", target="steps-overview.html" },
  { path="openshift/mig-ocp.html", project="openshift", target="mig-ocp.html" },
  { path="openshift/mirror-gpu-ocp-disconnected.html", project="openshift", target="mirror-gpu-ocp-disconnected.html" },
  { path="openshift/prerequisites.html", project="openshift", target="prerequisites.html" },
  { path="openshift/openshift-virtualization.html", project="openshift", target="openshift-virtualization.html" },
  { path="openshift/troubleshooting-gpu-ocp.html", project="openshift", target="troubleshooting-gpu-ocp.html" },
  { path="openshift/cluster-entitlement.html", project="openshift", target="appendix-ocp.html#cluster-entitlement" },
  { path="openshift/get-entitlement.html", project="openshift", target="appendix-ocp.html#get-entitlement" },
  { path="openshift/contents.html", project="openshift", target="index.html" },
  { path="openshift/appendix-ocp.html", project="openshift", target="appendix-ocp.html" },
  { path="openshift/clean-up.html", project="openshift", target="clean-up.html" },
  { path="openshift/install-gpu-ocp.html", project="openshift", target="install-gpu-ocp.html" },
]

[repo_docs.projects.gpu-operator.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.gpu-telemetry]
docs_root = "${root}/gpu-telemetry"
project = "gpu-telemetry"
name = "NVIDIA GPU Telemetry"
version = "1.0.0"
copyright_start = 2020

[repo_docs.projects.gpu-telemetry.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.kubernetes]
docs_root = "${root}/kubernetes"
project = "kubernetes"
name = "Kubernetes with NVIDIA GPUs"
version = "1.0.0"
copyright_start = 2020

[repo_docs.projects.kubernetes.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.openshift]
docs_root = "${root}/openshift"
project = "gpu-operator-openshift"
name = "NVIDIA GPU Operator on Red Hat OpenShift Container Platform"
version = "24.9.2"
copyright_start = 2020
sphinx_exclude_patterns = [
  "get-entitlement.rst",
]

[repo_docs.projects.openshift.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.partner-validated]
docs_root = "${root}/partner-validated"
project = "partner-validated"
name = "Partner Validated Configurations with NVIDIA GPU Operator"
version = "1.0.0"
copyright_start = 2023
sphinx_exclude_patterns = [
  "PARTNER-VALIDATED-TEMPLATE.rst"
]

[repo_docs.projects.partner-validated.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"


[repo_docs.projects.review]
docs_root = "${root}/review"
name = "Technical Review"
version = "0.1.0"
copyright_start = 2023

[repo_docs.projects.secure-services-istio-keycloak]
docs_root = "${root}/secure-services-istio-keycloak"
project = "secure-services-istio-keycloak"
name = "Securing NVIDIA Services with Istio and KeycloakÔÉÅ"
version = "0.1.0"
copyright_start = 2024

[repo_docs.projects.secure-services-istio-keycloak.builds.linkcheck]
build_by_default = false
output_format = "linkcheck"